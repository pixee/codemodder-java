package io.codemodder.providers.sarif.semgrep;

import com.github.javaparser.ast.Node;
import io.codemodder.CodemodReporterStrategy;
import io.codemodder.FixOnlyCodeChanger;
import io.codemodder.RegionNodeMatcher;
import io.codemodder.RuleSarif;
import io.codemodder.SarifPluginJavaParserChanger;
import io.codemodder.codetf.FixedFinding;

import java.util.Optional;

/**
 * Provides foundational functionality for modifying Java code using JavaParser based on findings
 * from a SARIF file generated by Semgrep analysis.
 */
public abstract class SemgrepSarifJavaParserChanger<T extends Node>
    extends SarifPluginJavaParserChanger<T> implements FixOnlyCodeChanger {

  protected SemgrepSarifJavaParserChanger(
      final RuleSarif sarif,
      final Class<? extends Node> nodeType,
      final RegionNodeMatcher regionNodeMatcher,
      final CodemodReporterStrategy reporterStrategy) {
    super(sarif, nodeType, regionNodeMatcher, reporterStrategy);
  }

  @Override
  public String vendorName() {
    return "Semgrep";
  }

    @Override
    public Optional<FixedFinding> buildFixedFinding(String id) {
        return Optional.of(new FixedFinding(id, getDetectorRule()));
    }
}
