package com.acme.testcode.resourceleak;

import java.io.BufferedReader;
import java.io.FileWriter;
import java.io.FileReader;
import java.io.IOException;
import java.io.Reader;
import java.sql.SQLException;
import java.sql.Connection;
import java.sql.ResultSet;

public class Test {

  private Connection conn;

  public void simple() throws IOException {
    FileWriter fr = new FileWriter("~/secrets.txt");
  }

  public void multipleResourcesInOneLine(String query, ResultSet rs) throws SQLException {
    var stream = conn.createStatement().executeQuery(query);
  }

  public void nestedReaders() throws IOException {
    BufferedReader br = new BufferedReader(new BufferedReader(new FileReader("~/test.txt")));
  }

  public Reader noFixReturned() throws IOException {
    BufferedReader br = new BufferedReader(new FileReader(""));
    BufferedReader br2 = new BufferedReader(br);
    return br2;
  }

  public Statement method(String query) throws SQLException {
    Statement stmt = conn.createStatement();
    ResultSet rs = stmt.executeQuery(query);
    return stmt;
  }

  public void noFixRSLeakByStmt(String query) throws SQLException {
    var stmt = method(query);
    var rs = stmt.getResultSet();
    rs.getRow();
  }
}
